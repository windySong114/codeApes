import{_ as t,c as d,o as e,a7 as a}from"./chunks/framework.DZKVYKRh.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"前端开发/JavaScript系列/浏览器存储方式.md","filePath":"前端开发/JavaScript系列/浏览器存储方式.md"}'),r={name:"前端开发/JavaScript系列/浏览器存储方式.md"},_=a('<div style="text-align:center;"><h1>浏览器存储方式</h1></div><table><tr><td>分类</td><td>cookie</td><td>localStorage </td><td>sessionStorage</td><td>indexedDB </td></tr><tr><td>数据生命周期</td><td>一般由服务器生成，可以设置过期时间</td><td>除非被清理，否则一直存在</td><td>页面关闭就清理</td><td>除非被清理，否则一直存在</td></tr><tr><td>数据存储大小</td><td>4K</td><td>5M</td><td>5M</td><td>无限</td></tr><tr><td>与服务端通信</td><td>与服务端通信，每次都会携带在 header 中，对于请求性能影响</td><td>不参与</td><td>不参与</td><td>不参与</td></tr><tr><td>更多描述</td><td>纯文本，没有可执行代码，一个域名下存放的cookie个数一般为20个，不同的浏览器个数不一，可以设置过期时间，默认是会话结束时间，当时间到期会自动销毁</td><td>持久化的本地存储，非主动删除会永久存在，存储信息在同一域中共享，受同源策略限制，只能存字符串，存取 JSON 数据需配合 JSON.stringify() 和 JSON.parse()，遇上禁用 setItem 的浏览器，需要使用 try...catch 捕获异常</td><td>浏览器窗口未关闭，即使刷新页面或进入同源另一页面，数据仍然存在，关闭窗口后，会被销毁，或者在新窗口打开同源的另一个页面，也会不存在</td><td>是一个基于javaScript的面向对象的数据库</td></tr></table>',2),o=[_];function c(s,i,n,p,l,S){return e(),d("div",null,o)}const f=t(r,[["render",c]]);export{m as __pageData,f as default};
